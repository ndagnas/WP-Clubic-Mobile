//*******************************************************************************************************************************
// DEBUT DU FICHIER
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// Nom           : Article.cs
// Auteur        : Nicolas Dagnas
// Description   : Implémentation de l'objet Article
// Créé le       : 26/02/2015
// Modifié le    : 21/05/2015
//*******************************************************************************************************************************

//-------------------------------------------------------------------------------------------------------------------------------
#region Using directives
//-------------------------------------------------------------------------------------------------------------------------------
using System;
using System.Net;
using System.Xml.Linq;
using System.Globalization;
using System.Collections.Generic;
using System.Runtime.Serialization;
//-------------------------------------------------------------------------------------------------------------------------------
#endregion
//-------------------------------------------------------------------------------------------------------------------------------

//*******************************************************************************************************************************
// Début du bloc "Clubic.Service"
//*******************************************************************************************************************************
namespace Clubic.Service
	{

	//   ###   ####   #####  #   ###   #      #####
	//  #   #  #   #    #    #  #   #  #      #    
	//  #####  ####     #    #  #      #      ###  
	//  #   #  #   #    #    #  #   #  #      #    
	//  #   #  #   #    #    #   ###   #####  #####

	//***************************************************************************************************************************
	// Classe Article
	//***************************************************************************************************************************
	#region // Déclaration et Implémentation de l'Objet
	//---------------------------------------------------------------------------------------------------------------------------
	/// <summary>
	/// Définit un article.
	/// </summary>
	//---------------------------------------------------------------------------------------------------------------------------
	[DataContract]
	public class Article
		{
		//***********************************************************************************************************************
		#region // Procédure Value => IDictionary
		//-----------------------------------------------------------------------------------------------------------------------
		private static string Value ( IDictionary<string, string> Self, string Name, string Default )
			{
			//-------------------------------------------------------------------------------------------------------------------
			return ( Self.ContainsKey ( Name ) ) ? Self[Name] : Default;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Initialise une nouvelle instance de l'objet <b>Article</b>.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public Article ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.ArticleID   = string.Empty;
			this.Author      = string.Empty;
			this.Content     = string.Empty;
			this.Icon        = string.Empty;
			this.IsFolder    = false;
			this.IsMarked    = false;
			this.PublishDate = DateTime.MinValue;
			this.SectionID   = 0;
			this.Title       = string.Empty;
			this.Uri         = string.Empty;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Initialise une nouvelle instance de l'objet <b>Article</b>.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		private Article ( string Value ) : this () { this.Load ( Value ); }
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Initialise une nouvelle instance de l'objet <b>Article</b>.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		private Article ( XElement Value ) : this () { this.Load ( Value ); }
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Initialise une nouvelle instance de l'objet <b>Article</b>.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		private Article ( IDictionary<string, string> Value ) : this () { this.Load ( Value ); }
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Charge les infos contenue dans la chaine.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public void CopyFrom ( Article Value )
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.ArticleID    = Value.ArticleID;
			this.Author       = Value.Author;
			this.Content      = Value.Content;
			this.Icon         = Value.Icon;
			this.IsFolder     = Value.IsFolder;
			this.PublishDate  = Value.PublishDate;
			this.SectionID    = Value.SectionID;
			this.Title        = Value.Title;
			this.Uri          = Value.Uri;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Charge les infos contenue dans la chaine.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public void Load ( string Value ) { this.Load ( Value.QueryString () ); }
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Charge les infos contenue dans le noeud JSON.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public void Load ( XElement Value )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.ArticleID = Value.GetString ( "id"      );
			this.Author    = Value.GetString ( "auteur"  );
			this.Title     = Value.GetString ( "titre"   );
			this.Uri       = Value.GetString ( "url_web" );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// Si on a pas d'Uri, c'est qu'on est en mode List
			//-------------------------------------------------------------------------------------------------------------------
			if ( string.IsNullOrEmpty ( this.Uri ) )
				{
				//---------------------------------------------------------------------------------------------------------------
				this.Icon      = Value.GetString ( "image" );
				this.SectionID = Value.GetString ( "cat"   ).ToInteger ();
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// Sinon, on est en mode Article
			//-------------------------------------------------------------------------------------------------------------------
			else { this.SectionID = Value.GetString ( "id_cat" ).ToInteger (); }
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// Description
			//-------------------------------------------------------------------------------------------------------------------
			this.Description = Value.GetString ( "chapeau" );

			if ( this.Description.Length > 147 )
				this.Description = this.Description.Substring ( 0, 147 ) + "...";

			this.Description = this.Description.Replace ( "\n", "" );
			this.Description = this.Description.Replace ( "\r", "" );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// SectionID
			//-------------------------------------------------------------------------------------------------------------------
			if ( this.SectionID == 0 && this.IsFolder ) this.SectionID = 2;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// PublishDate
			//-------------------------------------------------------------------------------------------------------------------
			string publishDate = Value.GetString ( "date_publication" );

			this.PublishDate = DateTime.MinValue;

			try { this.PublishDate = DateTime.ParseExact ( publishDate, "yyyy-MM-dd HH:mm:ss", 
			                                                                    null );  } catch {}
			//-------------------------------------------------------------------------------------------------------------------
			
			//-------------------------------------------------------------------------------------------------------------------
			this.Author = HttpUtility.HtmlDecode ( this.Author );
			this.Title  = HttpUtility.HtmlDecode ( this.Title  );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Charge les infos contenue dans le tableau.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public void Load ( IDictionary<string, string> QueryString )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.ArticleID = Value ( QueryString, "ArticleID" , this.ArticleID );
			this.Author    = Value ( QueryString, "Author"    , this.Author    );
			this.Title     = Value ( QueryString, "Title"     , this.Title     );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			this.Icon = Value ( QueryString, "Icon", this.Icon );
			this.Uri  = Value ( QueryString, "Uri" , this.Uri  );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// IsFolder
			//-------------------------------------------------------------------------------------------------------------------
			if ( QueryString.ContainsKey ( "IsFolder" ) )
				this.IsFolder = QueryString["IsFolder"].IsTrue ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// SectionID
			//-------------------------------------------------------------------------------------------------------------------
			if ( QueryString.ContainsKey ( "SectionID" ) )
				this.SectionID = QueryString["SectionID"].ToInteger ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			// Date ?
			//-------------------------------------------------------------------------------------------------------------------
			if ( QueryString.ContainsKey ( "PublishDate" ) )
				{
				//---------------------------------------------------------------------------------------------------------------
				DateTime PublishDate = DateTime.MinValue;
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				if ( QueryString["PublishDate"].Length == 12 )
					{
					//-----------------------------------------------------------------------------------------------------------
					if ( DateTime.TryParseExact ( QueryString["PublishDate"], "yyyyMMddHHmm", 
					                                 null, DateTimeStyles.None, out PublishDate ) )
						this.PublishDate = PublishDate;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				else if ( QueryString["PublishDate"].Length == 14 )
					{
					//-----------------------------------------------------------------------------------------------------------
					if ( DateTime.TryParseExact ( QueryString["PublishDate"], "yyyyMMddHHmmss", 
					                                 null, DateTimeStyles.None, out PublishDate ) )
						this.PublishDate = PublishDate.AddSeconds ( - PublishDate.Second );
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Charge les infos contenue dans le tableau.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public string UrlEncode ( params string[] Names )
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // Implémentation de la Procédure
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			NameValueCollection Result = new NameValueCollection ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			foreach ( string Name in Names )
				{
				//---------------------------------------------------------------------------------------------------------------
				switch ( Name )
					{
					//-----------------------------------------------------------------------------------------------------------
					case "ArticleID" : Result["ArticleID"] = this.ArticleID; break;
					case "Author"    : Result["Author"   ] = this.Author;    break;
					case "Title"     : Result["Title"    ] = this.Title;     break;
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					case "Icon" : Result["Icon"] = this.Icon; break;
					case "Uri"  : Result["Uri" ] = this.Uri; break;
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					case "IsFolder"     :
						Result["IsFolder" ] = this.IsFolder .ToString (); break;
					case "SectionID"    :
						Result["SectionID"] = this.SectionID.ToString (); break;
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					case "PublishDate"  :
						{
						//-------------------------------------------------------------------------------------------------------
						Result["PublishDate"] = this.PublishDate.ToString ( "yyyyMMddHHmmss" );

						break;
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			return Result.ToString ();
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Charge les infos contenue dans la chaine.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static Article Parse ( string Value ) { return new Article ( Value ); }
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Charge les infos contenue dans la chaine.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static Article Parse ( XElement Value ) { return new Article ( Value ); }
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Charge les infos contenue dans le tableau.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static Article Parse ( IDictionary<string, string> Value )
			 { return new Article ( Value ); }
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		[DataMember]public string   ArticleID   { get; set; }
		[DataMember]public string   Author      { get; set; }
		[DataMember]public string   Content     { get; set; }
		[DataMember]public string   Icon        { get; set; }
		[DataMember]public bool     IsFolder    { get; set; }
		[DataMember]public DateTime PublishDate { get; set; }
		[DataMember]public long     SectionID   { get; set; }
		[DataMember]public string   Title       { get; set; }
		[DataMember]public string   Uri         { get; set; }
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Description de l'article.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public string Description { get; set; }
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Obtiens un objet Article non initialisé.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static Article Empty { get { return new Article (); } }
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Indique si l'objet courant est initialisé ou pas.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public bool IsEmpty { get { return string.IsNullOrEmpty ( this.ArticleID ); } }
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Indique si l'atticle a été marqué.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public bool IsMarked { get; set; }
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Indique si l'atticle dispose juste d'un lien.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public bool IsSingleLink
			{
			//-------------------------------------------------------------------------------------------------------------------
			get
				{
				//---------------------------------------------------------------------------------------------------------------
				return   string.IsNullOrEmpty ( this.ArticleID ) && 
				       ! string.IsNullOrEmpty ( this.Uri       );
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		}
	//---------------------------------------------------------------------------------------------------------------------------
	#endregion
	//***************************************************************************************************************************

	} // Fin du namespace "Clubic.Service"
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// FIN DU FICHIER
//*******************************************************************************************************************************
